<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningcrew.linkup.community.query.mapper.CommentMapper">

    <!-- 특정 회원의 댓글 + 게시글 제목 조회 -->
    <select id="findCommentsByUserId" resultType="com.learningcrew.linkup.common.dto.query.UserCommentDto">
        SELECT
        comment_id,
        p.title AS postTitle,
        c.content,
        c.created_at
        FROM community_comment c
        JOIN community_post p ON p.post_id = c.post_id
        WHERE c.user_id = #{ userId }
    </select>

    <!-- 게시글 상세용 댓글 조회 -->
    <resultMap id="CommentWithLikeResultMap" type="com.learningcrew.linkup.community.query.dto.response.PostCommentDTO">
        <id property="commentId" column="comment_id"/>
        <result property="postId" column="post_id"/>
        <result property="userId" column="user_id"/>
        <result property="commentContent" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="likeCount" column="like_count"/>
    </resultMap>

    <select id="selectCommentsByPostId" resultMap="CommentWithLikeResultMap">
        SELECT
        c.comment_id,
        c.post_id,
        c.user_id,
        c.content,
        c.created_at,
        (
        SELECT COUNT(*) FROM comment_like cl WHERE cl.comment_id = c.comment_id
        ) AS like_count
        FROM community_comment c
        WHERE c.post_id = #{postId}
        AND c.is_deleted = 'N'
        ORDER BY c.created_at ASC
    </select>

    <!-- 특정 회원의 댓글 목록 -->
    <select id="selectCommentsByUser" resultType="com.learningcrew.linkup.community.query.dto.response.PostCommentDTO">
        SELECT
        comment_id AS commentId,
        post_id AS postId,
        user_id AS userId,
        content AS commentContent,
        created_at AS createdAt,
        is_deleted AS isDeleted
        FROM community_comment
        WHERE is_deleted = 'N' AND user_id = #{userId}
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countCommentsByUser" resultType="long">
        SELECT COUNT(*) FROM community_comment
        WHERE is_deleted = 'N' AND user_id = #{userId}
    </select>

    <!-- 전체 댓글 조회 (관리자용) -->
    <select id="selectAllComments" resultType="com.learningcrew.linkup.community.query.dto.response.PostCommentDTO">
        SELECT
        comment_id AS commentId,
        post_id AS postId,
        user_id AS userId,
        content AS commentContent,
        created_at AS createdAt,
        is_deleted AS isDeleted
        FROM community_comment
        <if test="keyword != null and keyword != ''">
            AND content LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countAllComments" resultType="long">
        SELECT COUNT(*) FROM community_comment
        <if test="keyword != null and keyword != ''">
            AND content LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
    </select>

</mapper>
