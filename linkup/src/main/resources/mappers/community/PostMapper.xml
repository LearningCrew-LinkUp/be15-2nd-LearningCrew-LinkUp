<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningcrew.linkup.community.query.mapper.CommunityMapper">
    <select id="findPostsByUserId" resultType="UserPostDto">
        SELECT
                p.post_id AS postId
              , p.title
              , p.content
              , p.created_at AS createdAt
              ,
        -- 좋아요 수
               (SELECT
                      COUNT(*)
                  FROM post_like pl
                 WHERE pl.post_id = p.post_id) AS likeCount
              ,
        -- 댓글 수
               (SELECT COUNT(*)
                  FROM community_comment cc
                 WHERE cc.post_id = p.post_id) AS commentCount
        FROM community_post p
        WHERE p.user_id = #{ userId }
        ORDER BY p.created_at DESC
    </select>
    <!-- 게시글 전체 조회 (관리자용: 키워드 + userId 조건 가능) -->
    <select id="selectAllPosts" resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
        post_id AS postId,
        user_id AS userId,
        title,
        content,
        is_deleted AS isDeleted,
        is_notice AS isNotice,
        created_at AS postCreatedAt,
        updated_at AS postUpdatedAt
        FROM community_post
        WHERE is_deleted = 'N'
        <if test="request.keyword != null and request.keyword != ''">
            AND (title LIKE CONCAT('%', #{request.keyword}, '%') OR content LIKE CONCAT('%', #{request.keyword}, '%'))
        </if>
        <if test="request.userId != null">
            AND user_id = #{request.userId}
        </if>
        ORDER BY created_at DESC
        LIMIT #{request.limit} OFFSET #{request.offset}
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="selectPostById" resultType="com.learningcrew.linkup.community.query.dto.response.PostDetailResponse">
        SELECT
        post_id AS postId,
        user_id AS userId,
        title,
        content,
        is_deleted AS isDeleted,
        is_notice AS isNotice,
        created_at AS postCreatedAt,
        updated_at AS postUpdatedAt
        FROM community_post
        WHERE post_id = #{postId}
        AND is_deleted = 'N'
    </select>

    <!-- 특정 회원의 게시글 목록 -->
    <select id="selectPostsByUser" resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
        post_id AS postId,
        user_id AS userId,
        title,
        content,
        is_deleted AS isDeleted,
        is_notice AS isNotice,
        created_at AS postCreatedAt,
        updated_at AS postUpdatedAt
        FROM community_post
        WHERE is_deleted = 'N' AND user_id = #{userId}
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 전체 게시글 수 (페이징용) -->
    <select id="countAllPosts" resultType="long">
        SELECT COUNT(*) FROM community_post
        WHERE is_deleted = 'N'
        <if test="keyword != null and keyword != ''">
            AND (title LIKE CONCAT('%', #{keyword}, '%') OR content LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
    </select>

    <!-- 특정 회원의 게시글 수 조회 -->
    <select id="countPostsByUser" resultType="long" parameterType="int">
        SELECT COUNT(*) FROM community_post
        WHERE is_deleted = 'N' AND user_id = #{userId}
    </select>
</mapper>