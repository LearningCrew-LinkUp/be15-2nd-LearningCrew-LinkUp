<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningcrew.linkup.community.query.mapper.PostMapper">


    <select id="findPostsByUserId" resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
                p.post_id AS postId
              , m.nickname AS nickname
              , p.title
              , p.content
              , p.created_at AS createdAt
              ,

               (SELECT
                      COUNT(*)
                  FROM post_like pl
                 WHERE pl.post_id = p.post_id) AS likeCount
              ,

               (SELECT COUNT(*)
                  FROM community_comment cc
                 WHERE cc.post_id = p.post_id) AS commentCount
        FROM community_post p
        JOIN member m ON p.user_id = m.member_id
        WHERE p.user_id = #{userId}
        ORDER BY p.created_at DESC
    </select>


    <!-- Í≤åÏãúÍ∏Ä Ï†ÑÏ≤¥ Ï°∞Ìöå (ÌöåÏõêÏö©) -->
    <!-- Í≥µÏßÄÍ∏Ä -->
    <select id="selectNoticePostsForUser" resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
        post_id AS postId,
        user_id AS userId,
        title,
        content,
        is_notice AS isNotice,
        created_at AS createdAt,
        updated_at AS updatedAt,
        is_deleted AS isDeleted
        FROM community_post
        WHERE is_deleted = 'N'
        AND is_notice = 'Y'
        <if test="keyword != null and keyword != ''">
            AND (title LIKE CONCAT('%', #{keyword}, '%')
            OR content LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY created_at DESC
    </select>

    <!-- ÏùºÎ∞ò Í≤åÏãúÍ∏Ä -->
    <select id="selectGeneralPostsForUser" resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
        p.post_id AS postId,
        p.user_id AS userId,
        m.nickname AS nickname,
        p.title,
        p.content,
        p.is_notice AS isNotice,
        p.created_at AS createdAt,
        p.updated_at AS updatedAt,
        p.is_deleted AS isDeleted,

        -- ‚ù§Ô∏è Ï¢ãÏïÑÏöî Ïàò
        (SELECT COUNT(*) FROM post_like pl WHERE pl.post_id = p.post_id) AS likeCount,

        -- üí¨ ÎåìÍ∏Ä Ïàò
        (SELECT COUNT(*) FROM community_comment cc WHERE cc.post_id = p.post_id AND cc.is_deleted = 'N') AS commentCount
        FROM community_post p
        JOIN member m ON p.user_id = m.member_id
        WHERE p.is_deleted = 'N' AND p.is_notice = 'N'

        <if test="keyword != null and keyword != ''">
            <choose>
                <when test="searchType == 'title'">
                    AND p.title LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="searchType == 'content'">
                    AND p.content LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="searchType == 'nickname'">
                    AND m.nickname LIKE CONCAT('%', #{keyword}, '%')
                </when>
            </choose>
        </if>

        <if test="userId != null">
            AND p.user_id = #{userId}
        </if>

        ORDER BY p.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>



    <!-- Í≤åÏãúÍ∏Ä ÏÉÅÏÑ∏ Ï°∞Ìöå -->
    <select id="selectPostDetail" resultType="com.learningcrew.linkup.community.query.dto.response.PostDetailResponse">
        SELECT
        p.post_id AS postId,
        p.user_id AS userId,
        m.nickname AS nickname,
        p.title,
        p.content,
        p.is_deleted AS isDeleted,
        p.is_notice AS isNotice,
        p.created_at AS createdAt,
        p.updated_at AS updatedAt
        FROM community_post p
        JOIN member m ON p.user_id = m.member_id
        WHERE p.post_id = #{postId}
        AND p.is_deleted = 'N'
    </select>


    <!-- ÌäπÏ†ï ÌöåÏõêÏùò Í≤åÏãúÍ∏Ä Î™©Î°ù -->
    <select id="selectPostsByUser" resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
        p.post_id AS postId,
        p.user_id AS userId,
        m.nickname AS nickname,
        p.title,
        p.content,
        p.is_deleted AS isDeleted,
        p.is_notice AS isNotice,
        p.created_at AS createdAt,
        p.updated_at AS updatedAt
        FROM community_post p
        JOIN member m ON p.user_id = m.member_id
        WHERE p.is_deleted = 'N' AND p.user_id = #{userId}
        ORDER BY p.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>


    <!-- ÏùºÎ∞ò Í≤åÏãúÍ∏Ä Ïàò (ÌöåÏõê ÌéòÏù¥ÏßïÏö©)    -->
    <select id="countGeneralPostsForUser" resultType="long">
        SELECT COUNT(*)
        FROM community_post
        WHERE is_deleted = 'N' AND is_notice = 'N'
        <if test="keyword != null and keyword != ''">
            AND (title LIKE CONCAT('%', #{keyword}, '%') OR content LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
    </select>

    <!-- ÌäπÏ†ï ÌöåÏõêÏùò Í≤åÏãúÍ∏Ä Ïàò Ï°∞Ìöå -->
    <select id="countPostsByUser" resultType="long" parameterType="int">
        SELECT COUNT(*) FROM community_post
        WHERE is_deleted = 'N' AND user_id = #{userId}
    </select>

    <!-- Í≤åÏãúÍ∏Ä Ïù¥ÎØ∏ÏßÄ Ï°∞Ìöå ÏøºÎ¶¨ -->
    <select id="selectPostImageUrlsByPostId" parameterType="int" resultType="string">
        SELECT image_url
        FROM post_image
        WHERE post_id = #{postId}
    </select>


    <select id="selectAllPosts" resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
        p.post_id AS postId,
        p.user_id AS userId,
        m.nickname AS nickname,
        p.title,
        p.content,
        p.is_notice AS isNotice,
        p.created_at AS createdAt,
        p.updated_at AS updatedAt,
        p.deleted_at AS deletedAt,
        p.is_deleted AS isDeleted
        FROM community_post p
        JOIN member m ON p.user_id = m.member_id
        <where>
            1 = 1
            <if test="keyword != null and keyword != ''">
                AND (p.title LIKE CONCAT('%', #{keyword}, '%') OR p.content LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="userId != null">
                AND p.user_id = #{userId}
            </if>
        </where>
        ORDER BY p.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- Ï†ÑÏ≤¥ Í≤åÏãúÍ∏Ä Ïàò (ÌéòÏù¥ÏßïÏö©) -->
    <select id="countAllPosts" resultType="long">
        SELECT COUNT(*) FROM community_post
        <where>
            1 = 1
            <if test="keyword != null and keyword != ''">
                AND  (title LIKE CONCAT('%', #{keyword}, '%') OR content LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
        </where>
    </select>

    <!-- Í≥µÏßÄÏÇ¨Ìï≠ Í≤åÏãúÍ∏Ä Ïàò Ï°∞Ìöå (ÌöåÏõêÏö©) -->
    <select id="countNoticePostsForUser" resultType="long">
        SELECT COUNT(*)
        FROM community_post
        WHERE is_deleted = 'N'
        AND is_notice = 'Y'
        <if test="keyword != null and keyword != ''">
            AND (title LIKE CONCAT('%', #{keyword}, '%') OR content LIKE CONCAT('%', #{keyword}, '%'))
        </if>
    </select>


</mapper>