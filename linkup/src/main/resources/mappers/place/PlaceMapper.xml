<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningcrew.linkup.place.query.mapper.PlaceMapper">
    <select id="selectAllPlaces" parameterType="com.learningcrew.linkup.place.query.dto.request.PlaceListRequest"
            resultType="com.learningcrew.linkup.place.query.dto.response.PlaceDto">

        <choose>
            <when test="latitude != null and longitude != null">
                SELECT
                p.place_id AS placeId,
                p.place_name AS placeName,
                p.address AS address,
                p.rental_cost AS rentalCost,
                COALESCE(AVG(r.review_score), 0) AS reviewRating,
                (
                6371 * ACOS(
                COS(RADIANS(#{latitude})) * COS(RADIANS(p.latitude)) *
                COS(RADIANS(p.longitude) - RADIANS(#{longitude})) +
                SIN(RADIANS(#{latitude})) * SIN(RADIANS(p.latitude))
                )
                ) AS distance
                FROM place p
                LEFT JOIN place_review r ON p.place_id = r.place_id
                WHERE p.latitude IS NOT NULL AND p.longitude IS NOT NULL
                AND p.is_active = 'Y'
                <if test="sportId != null">
                    AND p.sport_id = #{sportId}
                </if>
                HAVING distance &lt;= 5
                ORDER BY distance ASC
                LIMIT #{limit} OFFSET #{offset}
            </when>
            <otherwise>
                SELECT
                p.place_id AS placeId,
                p.place_name AS placeName,
                p.address AS address,
                p.rental_cost AS rentalCost,
                COALESCE(AVG(r.review_score), 0) AS reviewRating
                FROM place p
                LEFT JOIN place_review r ON p.place_id = r.place_id
                WHERE 1 = 1
                <if test="sportId != null">
                    AND p.sport_id = #{sportId}
                </if>
                <if test="address != null and address != ''">
                    AND p.address LIKE CONCAT('%', #{address}, '%')
                </if>
                AND p.is_active = 'Y'
                GROUP BY p.place_id, p.place_name, p.address
                ORDER BY p.place_id DESC
                LIMIT #{limit} OFFSET #{offset}
            </otherwise>
        </choose>
    </select>

    <!-- 전체 장소 개수 조회 쿼리 -->
    <select id="countPlaces" parameterType="com.learningcrew.linkup.place.query.dto.request.PlaceListRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM place p
        WHERE 1 = 1
        <if test="sportId != null">
            AND p.sport_id = #{sportId}
        </if>
        <if test="address != null and address != ''">
            AND p.address LIKE CONCAT('%', #{address}, '%')
        </if>
        AND p.is_active = 'Y'
    </select>

    <resultMap id="placeDetailResultMap" type="com.learningcrew.linkup.place.query.dto.response.PlaceDetailResponse">
        <id property="placeId" column="place_id"/>
        <result property="placeName" column="place_name"/>
        <result property="address" column="address"/>
        <result property="description" column="description"/>
        <result property="equipment" column="equipment"/>
        <result property="rentalCost" column="rental_cost"/>
        <!-- 하위 리스트들도 정확히 지정 -->
        <collection property="imageUrl" ofType="java.lang.String" javaType="java.util.ArrayList">
            <result column="image_url"/>
        </collection>
        <collection property="operationTimes" ofType="com.learningcrew.linkup.place.query.dto.response.OperationTimeResponse">
            <result property="dayOfWeek" column="day_of_week"/>
            <result property="startTime" column="start_time"/>
            <result property="endTime" column="end_time"/>
        </collection>
        <collection property="placeReviews" ofType="com.learningcrew.linkup.place.query.dto.response.PlaceReviewResponse">
            <result property="reviewContent" column="review_content"/>
            <result property="reviewImageUrl" column="review_image_url"/>
            <result property="reviewScore" column="review_score"/>
        </collection>
    </resultMap>


    <select id="selectBasicPlaceDetail" resultType="PlaceDetailResponse">
        SELECT place_id, place_name, address, description, equipment, rental_cost
        FROM place
        WHERE place_id = #{placeId}
    </select>

    <select id="selectImages" resultType="String">
        SELECT image_url FROM place_image WHERE place_id = #{placeId}
    </select>

    <select id="selectOperationTimes" resultType="OperationTimeResponse">
        SELECT day_of_week, start_time, end_time FROM operation_time WHERE place_id = #{placeId}
    </select>

    <select id="selectReviews" resultType="PlaceReviewResponse">
        SELECT review_content, review_image_url, review_score
        FROM place_review
        WHERE place_id = #{placeId} AND status_id IN (2, 3)
    </select>

 <!-- 관리자용 장소목록 조회 -->
    <select id="selectAllPlacesByAdmin"
            parameterType="com.learningcrew.linkup.place.query.dto.request.AdminPlaceListRequest"
            resultType="com.learningcrew.linkup.place.query.dto.response.AdminPlaceDto">

        SELECT
        p.place_id AS placeId,
        p.place_name AS placeName,
        p.address AS address,
        p.owner_id AS ownerId,
        u.user_name AS userName,
        s.sport_name AS sportName,
        p.rental_cost AS rentalCost,
        p.is_active AS isActive,
        ROUND(COALESCE(AVG(r.review_score), 0), 1) AS averageScore
        FROM place p
        LEFT JOIN user u ON p.owner_id = u.user_id
        LEFT JOIN sport_type s ON p.sport_id = s.sport_id
        LEFT JOIN place_review r ON p.place_id = r.place_id
        WHERE 1 = 1
        <if test="sportId != null">
            AND p.sport_id = #{sportId}
        </if>
        <if test="address != null and address != ''">
            AND p.address LIKE CONCAT('%', #{address}, '%')
        </if>
        <if test="isActive != null">
            AND p.is_active = #{isActive}
        </if>
        GROUP BY p.place_id, p.place_name, p.address, p.owner_id, u.user_name, s.sport_name, p.rental_cost
        ORDER BY p.place_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countPlacesByAdmin"
            parameterType="com.learningcrew.linkup.place.query.dto.request.AdminPlaceListRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM place p
        WHERE 1 = 1
        <if test="sportId != null">
            AND p.sport_id = #{sportId}
        </if>
        <if test="address != null and address != ''">
            AND p.address LIKE CONCAT('%', #{address}, '%')
        </if>
        <if test="isActive != null">
            AND p.is_active = #{isActive}
        </if>
    </select>


    <!-- 사업자별 자신의 등록 장소 목록 조회 -->
    <select id="selectPlacesByOwner"
            parameterType="PlaceListRequest"
            resultType="PlaceDto">
        SELECT
            p.place_id AS placeId,
            p.place_name AS placeName,
            p.address AS address,
            COALESCE(AVG(r.review_score), 0) AS reviewRating
        FROM place p
        LEFT JOIN place_review r ON p.place_id = r.place_id
        WHERE 1 = 1
        AND p.owner_id = #{ownerId}
        <if test="sportId != null">
            AND p.sport_id = #{sportId}
        </if>
        <if test="address != null and address != ''">
            AND p.address LIKE CONCAT('%', #{address}, '%')
        </if>
        GROUP BY p.place_id, p.place_name, p.address
        ORDER BY p.place_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countPlacesByOwner"
            parameterType="PlaceListRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM place p
        WHERE 1 = 1
        AND p.owner_id = #{ownerId}
        <if test="sportId != null">
            AND p.sport_id = #{sportId}
        </if>
        <if test="address != null and address != ''">
            AND p.address LIKE CONCAT('%', #{address}, '%')
        </if>
    </select>
    <select id="findOwnerIdByPlaceId" resultType="int" parameterType="int">
        SELECT owner_id
        FROM place
        WHERE place_id = #{placeId}
    </select>
    <select id="findPlaceNameByPlaceId" resultType="String" parameterType="int">
        SELECT place_name
        FROM place
        WHERE place_id = #{placeId}
    </select>

    <!-- PlaceMapper.xml -->
    <select id="selectPlaceById" resultType="com.learningcrew.linkup.place.command.domain.aggregate.entity.Place">
        SELECT *
        FROM place
        WHERE place_id = #{placeId}
    </select>

    <!-- 관리자용 장소 후기 목록 조회 -->
    <select id="selectAllPlaceReviewsByAdmin"
            parameterType="com.learningcrew.linkup.place.query.dto.request.AdminPlaceReviewListRequest"
            resultType="com.learningcrew.linkup.place.query.dto.response.AdminPlaceReviewDto">

        SELECT
        pr.review_id AS reviewId,
        m.member_id AS memberId,
        m.nickname AS writerName,
        p.place_id AS placeId,
        p.place_name AS placeName,
        pr.review_score AS score,
        pr.review_content AS content,
        pr.review_image_url AS imageUrl
        FROM place_review pr
        JOIN member m ON pr.member_id = m.member_id
        JOIN place p ON pr.place_id = p.place_id
        ORDER BY pr.review_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 관리자용 장소 후기 개수 조회 -->
    <select id="countPlaceReviewsByAdmin"
            parameterType="com.learningcrew.linkup.place.query.dto.request.AdminPlaceReviewListRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM place_review
    </select>




</mapper>
