<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningcrew.linkup.point.query.mapper.PointTransactionMapper">
    <select id="findPointHistoriesByUserId" resultType="PointHistoryResponse">
        SELECT
             point_transaction_id,
             amount,
             transaction_type,
             created_at
          FROM point_transaction
         WHERE user_id = #{userId}
         ORDER BY created_at DESC
    </select>
    <select id="findMonthlySettlementAmount" resultType="MonthlySettlementResponse">
        SELECT
                pt.user_id AS ownerId
              , SUM(pt.amount) AS totalAmount
              , EXISTS (
                    SELECT 1 FROM settlement s
                     WHERE s.owner_id = pt.user_id
                       AND YEAR(s.requested_at) = #{year}
                       AND MONTH(s.requested_at) = #{month}
                    ) AS alreadyRequested
         FROM point_transaction pt
        WHERE pt.user_id = #{ownerId}
          AND pt.transaction_type IN ('CHARGE', 'PAYMENT')
          AND YEAR(pt.created_at) = #{year}
          AND MONTH(pt.created_at) = #{month}
        GROUP BY pt.user_id
    </select>
    <select id="findSettlementByOwnerId" resultType="SettlementHistory">
        SELECT
            settlement_id AS settlementId,
            owner_id AS ownerId,
            amount,
            u.user_name as ownerName,
            completed_at AS completedAt
        FROM settlement s
        JOIN owner o ON o.owner_id = s.owner_id
        JOIN user u ON u.user_id = o.owner_id
        WHERE s.owner_id = #{userId}
        ORDER BY completed_at DESC
    </select>
    <select id="findPointTransactions" resultType="com.learningcrew.linkup.point.query.dto.response.PointTransactionResponse">
        SELECT
            pt.point_transaction_id AS pointTransactionId,
            u.user_id AS userId,
            u.user_name AS userName,
            r.role_name AS roleName,
            pt.amount,
            pt.transaction_type AS transactionType,
            pt.created_at AS createdAt
        FROM point_transaction pt
        JOIN user u ON pt.user_id = u.user_id
        JOIN role r ON u.role_id = r.role_id
        <where>
            <if test="userId != null">
                AND u.user_id = #{userId}
            </if>
            <if test="roleName != null">
                AND r.role_name = #{roleName}
            </if>
            <if test="transactionType != null">
                AND pt.transaction_type = #{transactionType}
            </if>
            <if test="startDate != null">
                AND pt.created_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND pt.created_at &gt; #{endDate}
            </if>
        </where>
        ORDER BY pt.created_at DESC
    </select>
    <select id="findUserPointTransactions" resultType="UserPointTransactionResponse">
        SELECT
            pt.point_transaction_id,
            pt.amount,
            pt.transaction_type,
            pt.created_at
        FROM point_transaction pt
        WHERE pt.user_id = #{userId}
        <if test="transactionType != null">
            AND pt.transaction_type = #{transactionType}
        </if>
        <if test="year != null and month != null">
            AND YEAR(pt.created_at) = #{year}
            AND MONTH(pt.created_at) = #{month}
        </if>
        ORDER BY pt.created_at DESC
    </select>
    <select id="findSettlements" resultType="SettlementHistory">
        SELECT
            s.settlement_id,
            s.owner_id,
            s.amount,
            u.user_name as ownerName,
            s.completed_at AS completedAt
        FROM settlement s
        JOIN owner o ON o.owner_id = s.owner_id
        JOIN user u ON u.user_id = o.owner_id
        <where>
            <if test="userId != null">
                AND u.user_id = #{userId}
            </if>
            <if test="startDate != null">
                AND s.completed_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND s.completed_at &lt;= #{endDate}
            </if>
        </where>
        ORDER BY s.completed_at DESC
    </select>

</mapper>